-- MySQL Script generated by MySQL Workbench
-- Wed Dec 20 04:38:03 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema deltaevo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__language` (
  `id_language` INT(11)     NOT NULL AUTO_INCREMENT,
  `code`        VARCHAR(3)  NOT NULL,
  `name`        VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_language`),
  INDEX `idx_code` (`code` ASC),
  INDEX `idx_name` (`name` ASC)
)
  ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__product` (
  `id_product` INT(11)     NOT NULL AUTO_INCREMENT,
  `alias`      VARCHAR(50) NULL     DEFAULT NULL,
  PRIMARY KEY (`id_product`)
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__users` (
  `id_user`    INT(11)     NOT NULL AUTO_INCREMENT,
  `passw`      VARCHAR(32) NOT NULL,
  `phone`      VARCHAR(20) NULL     DEFAULT NULL,
  `email`      VARCHAR(80) NOT NULL,
  `lastvivsit` TIMESTAMP   NULL     DEFAULT NULL,
  `datereg`    TIMESTAMP   NULL     DEFAULT CURRENT_TIMESTAMP,
  `firstname`  VARCHAR(45) NULL     DEFAULT NULL,
  `lastname`   VARCHAR(45) NULL     DEFAULT NULL,
  `middlename` VARCHAR(45) NULL     DEFAULT NULL,
  `visitcount` INT(11)     NOT NULL DEFAULT '0',
  `blocked`    INT(11)     NOT NULL DEFAULT '0',
  `confirm`    INT(11)     NOT NULL DEFAULT '0',
  PRIMARY KEY (`id_user`),
  UNIQUE INDEX `idx_mail` (`email` ASC),
  INDEX `idx_passw` (`passw` ASC)
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__users_address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__users_address` (
  `id_users_address` INT(11)     NOT NULL AUTO_INCREMENT,
  `id_user`          INT(11)     NOT NULL,
  `id_city`          INT(11)     NULL     DEFAULT NULL,
  `id_country`       INT(11)     NULL     DEFAULT NULL,
  `street`           VARCHAR(60) NULL     DEFAULT NULL,
  `postcode`         VARCHAR(12) NULL     DEFAULT NULL,
  `house`            VARCHAR(15) NULL     DEFAULT NULL,
  `entrance`         VARCHAR(10) NULL     DEFAULT NULL,
  `apartment`        VARCHAR(10) NULL     DEFAULT NULL,
  PRIMARY KEY (`id_users_address`),
  INDEX `user_address_to_user_idx` (`id_user` ASC),
  CONSTRAINT `user_address_to_user`
  FOREIGN KEY (`id_user`)
  REFERENCES `deltaevo`.`delta__users` (`id_user`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__product_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__product_description` (
  `id_product`  INT          NOT NULL,
  `name`        VARCHAR(150) NULL,
  `intro`       VARCHAR(300) NULL,
  `id_language` INT          NOT NULL DEFAULT 1,
  INDEX `product_descr_to_language_idx` (`id_language` ASC),
  CONSTRAINT `product_descr_to_product`
  FOREIGN KEY (`id_product`)
  REFERENCES `deltaevo`.`delta__product` (`id_product`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION,
  CONSTRAINT `product_descr_to_language`
  FOREIGN KEY (`id_language`)
  REFERENCES `deltaevo`.`delta__language` (`id_language`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__product_images`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__product_images` (
  `id_product` INT          NOT NULL,
  `link`       VARCHAR(100) NULL,
  `position`   INT          NULL,
  PRIMARY KEY (`id_product`),
  CONSTRAINT `images_to_product`
  FOREIGN KEY (`id_product`)
  REFERENCES `deltaevo`.`delta__product` (`id_product`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__product_options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__product_options` (
  `id_product`      INT                      NOT NULL,
  `visible`         SET ('1', '0')           NULL DEFAULT '1',
  `searchable`      SET ('1', '0')           NULL DEFAULT '1',
  `deleted`         SET ('1', '0')           NULL DEFAULT '0',
  `state_stock`     SET ('0', '1', '2', '3') NULL DEFAULT '1',
  `counter_visible` INT                      NULL DEFAULT 0,
  `create_date`     VARCHAR(20)              NULL,
  `update_date`     VARCHAR(20)              NULL,
  PRIMARY KEY (`id_product`),
  CONSTRAINT `product_props_to_product`
  FOREIGN KEY (`id_product`)
  REFERENCES `deltaevo`.`delta__product` (`id_product`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__vendors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__vendors` (
  `id_vendor` INT         NOT NULL AUTO_INCREMENT,
  `name`      VARCHAR(45) NULL,
  PRIMARY KEY (`id_vendor`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__vendor_to_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__vendor_to_product` (
  `id_vendor`  INT NOT NULL,
  `id_product` INT NULL,
  UNIQUE INDEX `idx_mplt` (`id_vendor` ASC, `id_product` ASC),
  INDEX `to_product_idx` (`id_product` ASC),
  CONSTRAINT `to_vendor`
  FOREIGN KEY (`id_vendor`)
  REFERENCES `deltaevo`.`delta__vendors` (`id_vendor`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION,
  CONSTRAINT `to_product`
  FOREIGN KEY (`id_product`)
  REFERENCES `deltaevo`.`delta__product` (`id_product`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__product_to_directory`
-- -----------------------------------------------------



CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__product_to_directory` (
  `id_product` INT NOT NULL,
  `id_sc`      INT(10) NOT NULL,
  INDEX `to_product_idx` (`id_product` ASC),
  INDEX `to_directory_idx` (`id_sc` ASC),
  CONSTRAINT `to_product_prod_to_dir`
  FOREIGN KEY (`id_product`)
  REFERENCES `deltaevo`.`delta__product` (`id_product`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `deltaevo`.`delta__props_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__props_group` (
  `id_props_group` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id_props_group`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__props_group_descr`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__props_group_descr` (
  `id_props_group` INT         NOT NULL,
  `name`           VARCHAR(45) NULL,
  `id_language`    INT         NOT NULL DEFAULT 1,
  INDEX `to_group_idx` (`id_props_group` ASC),
  INDEX `to_lang_idx` (`id_language` ASC),
  UNIQUE INDEX `idx_unq` (`id_props_group` ASC, `id_language` ASC),
  CONSTRAINT `to_group`
  FOREIGN KEY (`id_props_group`)
  REFERENCES `deltaevo`.`delta__props_group` (`id_props_group`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION,
  CONSTRAINT `to_lang`
  FOREIGN KEY (`id_language`)
  REFERENCES `deltaevo`.`delta__language` (`id_language`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__props`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__props` (
  `id_prop`  INT NOT NULL AUTO_INCREMENT,
  `id_group` INT NOT NULL,
  PRIMARY KEY (`id_prop`),
  INDEX `to_group_idx` (`id_group` ASC),
  CONSTRAINT `to_group_from_props`
  FOREIGN KEY (`id_group`)
  REFERENCES `deltaevo`.`delta__props_group` (`id_props_group`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__props_descr`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__props_descr` (
  `id_prop`     INT         NOT NULL,
  `name`        VARCHAR(45) NULL,
  `id_language` INT         NOT NULL DEFAULT 1,
  INDEX `to_props_idx` (`id_prop` ASC),
  INDEX `to_lang_idx` (`id_language` ASC),
  UNIQUE INDEX `idx_unq` (`id_prop` ASC, `id_language` ASC),
  CONSTRAINT `to_props_from_props_descr`
  FOREIGN KEY (`id_prop`)
  REFERENCES `deltaevo`.`delta__props` (`id_prop`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION,
  CONSTRAINT `to_lang_from_props_descr`
  FOREIGN KEY (`id_language`)
  REFERENCES `deltaevo`.`delta__language` (`id_language`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__props_to_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__props_to_product` (
  `id_prop`    INT NOT NULL,
  `id_product` INT NOT NULL,
  INDEX `to_prop_idx` (`id_prop` ASC),
  INDEX `to_product_idx` (`id_product` ASC),
  UNIQUE INDEX `idx_unq` (`id_prop` ASC, `id_product` ASC),
  CONSTRAINT `to_prop_from_props_keys`
  FOREIGN KEY (`id_prop`)
  REFERENCES `deltaevo`.`delta__props` (`id_prop`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION,
  CONSTRAINT `to_product_from_props_keys`
  FOREIGN KEY (`id_product`)
  REFERENCES `deltaevo`.`delta__product` (`id_product`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `deltaevo`.`delta__props_to_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`delta__props_to_category` (
  `id_prop` INT NOT NULL,
  `id_sc`   INT NOT NULL,
  INDEX `to_prop_idx` (`id_prop` ASC),
  UNIQUE INDEX `idx_unq` (`id_prop` ASC, `id_sc` ASC),
  INDEX `to_sc0_idx` (`id_sc` ASC),
  CONSTRAINT `to_prop0`
  FOREIGN KEY (`id_prop`)
  REFERENCES `deltaevo`.`delta__props` (`id_prop`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION,
  CONSTRAINT `to_sc0`
  FOREIGN KEY (`id_sc`)
  REFERENCES `deltaevo`.`delta_site_content` (`id`)
	ON DELETE CASCADE
	ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

USE `deltaevo`;

-- -----------------------------------------------------
-- Placeholder table for view `deltaevo`.`v_user_and_address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `deltaevo`.`v_user_and_address` (
  `id_user`          INT,
  `id_users_address` INT,
  `phone`            INT,
  `email`            INT,
  `firstname`        INT,
  `lastname`         INT,
  `middlename`       INT,
  `street`           INT,
  `postcode`         INT,
  `house`            INT,
  `entrance`         INT,
  `apartment`        INT
);

-- -----------------------------------------------------
-- View `deltaevo`.`v_user_and_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `deltaevo`.`v_user_and_address`;
USE `deltaevo`;
CREATE OR REPLACE ALGORITHM = UNDEFINED
  DEFINER =`root`@`%`
  SQL SECURITY DEFINER VIEW `deltaevo`.`v_user_and_address` AS
  SELECT
	`u`.`id_user`           AS `id_user`,
	`ua`.`id_users_address` AS `id_users_address`,
	`u`.`phone`             AS `phone`,
	`u`.`email`             AS `email`,
	`u`.`firstname`         AS `firstname`,
	`u`.`lastname`          AS `lastname`,
	`u`.`middlename`        AS `middlename`,
	`ua`.`street`           AS `street`,
	`ua`.`postcode`         AS `postcode`,
	`ua`.`house`            AS `house`,
	`ua`.`entrance`         AS `entrance`,
	`ua`.`apartment`        AS `apartment`
  FROM (`deltaevo`.`delta__users` `u`
	JOIN `deltaevo`.`delta__users_address` `ua` ON ((`u`.`id_user` = `ua`.`id_user`)));





-- -----------------------------------------------------
-- View `deltaevo`.`v_product_dir_and_option`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `deltaevo`.`v_product_dir_and_option`;
USE `deltaevo`;
CREATE OR REPLACE ALGORITHM = UNDEFINED
  DEFINER =`root`@`%`
  SQL SECURITY DEFINER VIEW `deltaevo`.`v_product_dir_and_option` AS
  SELECT
	`pd`.`id_product`       AS `id_product`,
	`pd`.`id_sc`            AS `id_sc`,
	`po`.`visible`          AS `visible`,
	`po`.`searchable`       AS `searchable`,
	`po`.`deleted`          AS `deleted`,
	`po`.`state_stock`      AS `state_stock`,
	`po`.`counter_visible`  AS `counter_visible`,
	`po`.`create_date`      AS `create_date`,
	`po`.`update_date`      AS `update_date`
  FROM (`deltaevo`.`delta__product_to_directory` `pd`
	JOIN `deltaevo`.`delta__product_options` `po` ON ((`pd`.`id_product` = `po`.`id_product`)));




DROP TABLE IF EXISTS `deltaevo`.`v_product_all_field`;
USE `deltaevo`;
CREATE OR REPLACE ALGORITHM = UNDEFINED
  DEFINER =`root`@`%`
  SQL SECURITY DEFINER VIEW `deltaevo`.`v_product_all_field` AS
  SELECT
  `p`.`id_product`        AS `id_product`,
  `p`.`alias`             AS `alias`,
  `pd`.`name`             AS `name`,
  `pd`.`intro`            AS `intro`,
  `pd`.`id_language`      AS `id_language`,
  `po`.`visible`          AS `visible`,
  `po`.`searchable`       AS `searchable`,
  `po`.`deleted`          AS `deleted`,
  `po`.`state_stock`      AS `state_stock`,
  `po`.`counter_visible`  AS `counter_visible`,
  `po`.`create_date`      AS `create_date`,
  `po`.`update_date`      AS `update_date`
  FROM (
    `deltaevo`.`delta__product` `p`
    JOIN `deltaevo`.`delta__product_description`    `pd` ON ((`p`.`id_product` = `pd`.`id_product`))
    JOIN `deltaevo`.`delta__product_options`        `po` ON ((`p`.`id_product` = `po`.`id_product`))
  );



SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
